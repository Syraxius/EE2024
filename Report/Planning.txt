C Equivalent

distrBF(T,(int*)n_res,(int*)Dij,(int*)Dj) {

	int N = n_res[0][0];

	for (int i=0; i<T; i++) {

		int minDij = 0x7FFFFFFF;
		int j = 0;

		for (int j=0; j<N; j++) {
			if (Dij[i][j]+Dj[0] < minDij) {
				minDij = dij[i][j]+Dj[0];
				minJ = j+1;
			}
		}

		n_res[i][0] = minDij;
		n_res[i][1] = minJ;
	}
}

Starting:
R0 = T
R1 = n_res
R2 = Dij
R3 = Dj
R4 is storing N
R5 is T counting index
R6 is N counting index
R7 is passed Dij
R8 is return value from ELEMENT
R9 is accumulator (from ELEMENT)
R10 is best Dij
R11 is best j